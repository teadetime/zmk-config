/*
* Copyright (c) 2021 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYMNAV 1
#define BRACK 2
#define NUM 3
#define CONFIG 4

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <140>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <100>;
            key-positions = <9 20>;
            bindings = <&kp TAB>;
        };

        // combo_tab {
        //     timeout-ms = <100>;
        //     key-positions = <22 23>;
        //     bindings = <&kp TAB>;
        // };

        // combo_minus {
        //     timeout-ms = <100>;
        //     key-positions = <26 27>;
        //     bindings = <&kp MINUS>;
        // };

        // combo_underscore {
        //     timeout-ms = <100>;
        //     key-positions = <26 28>;
        //     bindings = <&kp UNDERSCORE>;
        // };

        // combo_colon {
        //     timeout-ms = <100>;
        //     key-positions = <7 8>;
        //     bindings = <&kp COLON>;
        // };

        // combo_semicolon {
        //     timeout-ms = <100>;
        //     key-positions = <6 8>;
        //     bindings = <&kp SEMICOLON>;
        // };

        // combo_backslash {
        //     timeout-ms = <100>;
        //     key-positions = <27 28>;
        //     bindings = <&kp BSLH>;
        // };

        // combo_grave {
        //     timeout-ms = <100>;
        //     key-positions = <8 9>;
        //     bindings = <&kp GRAVE>;
        // };
    };
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <BRACK SYMNAV>;
            then-layer = <CONFIG>;
            };
        };

    keymap {
        compatible = "zmk,keymap";

default_layer {
// ------------------------------------
// | Q       | W      | E        | R       | T |      | Y | U       | I | O | P       |
// | CTRL(A) | NUM(S) | BRACK(D) | NAV1(F) | G |      | H | NAV2(J) | K | L | ALT(;)  |
// | SHFT(Z) | X      | C        | V       | B |      | N | M       | , | . | SHFT(") |
//                               |         |   |      |   |         |   |

    bindings = <
        &kp Q   &kp W      &kp E        &kp R          &kp T                                &kp Y  &kp U        &kp I        &kp O      &kp P
       &kp A        &lt NUM S  &hm LSHFT D  &hm LCTRL F    &kp G                 &kp H  &hm LCTRL J  &hm LSHFT K  &kp L    &hm RALT SEMI 
     &mt LSHFT Z  &kp X      &kp C        &kp V          &kp B                 &kp N  &kp M        &kp COMMA    &kp DOT  &mt LSHFT DQT
                                        &mt LCTRL DEL  &lt BRACK BSPC       &lt SYMNAV SPACE  &mt LALT RET
                        >;
    };

symnav_layer {
// ------------------------------------
// | # | $ | & | * | ? |      | `   |  %  | @  |    |     |
// | : | _ | - | > | ! |      | TAB | LFT | DN | UP | RGT |
// | ~ | ^ | + | < | = |      | ESC | '   | ,  | .  |     |
//             |   |   |      |     |     |
bindings = <
     &kp HASH   &kp DLLR   &kp AMPS         &kp STAR      &kp QMARK     &kp GRAVE  &kp PRCNT  &kp AT    &trans   &trans
     &kp COLON  &kp UNDER  &hm LSHFT MINUS  &hm LCTRL GT  &kp EXCL      &kp TAB    &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT 
    &kp TILDE  &kp CARET  &kp PLUS         &kp LT        &kp EQUAL     &kp ESC    &kp APOS   &trans    &trans  &trans 
                                            &trans     &trans        &trans     &trans
>;
};

brackets_layer {
// ------------------------------------
//  | # | $ | & | * | ? |      | ` | ( | ) | " | | |
//  | : | _ | - | > | ! |      | " | [ | ] | / | \ |
//  | ~ | ^ | + | < | = |      | ~ | { | } | < | > |
//              |   |   |      |   |   |
bindings = <
   &kp HASH  &kp DLLR   &kp AMPS   &kp STAR  &kp QMARK     &kp GRAVE  &kp LPAR  &kp RPAR  &kp UNDER   &kp PIPE
   &kp COLON  &kp UNDER  &kp MINUS  &kp GT     &kp EXCL      &kp DQT    &kp LBKT  &kp RBKT  &kp FSLH   &kp BSLH 
   &kp TILDE  &kp CARET  &kp PLUS   &kp LT     &kp EQUAL     &kp TILDE  &kp LBRC  &kp RBRC  &kp LT     &kp GT 
                                    &trans     &trans        &trans     &trans
>;
};

num_layer {
// ------------------------------------
// | | | | | |      |   | 7 | 8 | 9 |   |
// | | | | | |      | 0 | 4 | 5 | 6 | 0 |
// | | | | | |      |   | 1 | 2 | 3 |   |
//       | | |      |   |   |
bindings = <
 &trans  &trans &trans &trans &trans     &trans  &kp N7  &kp N8  &kp N9    &trans
 &trans &trans &trans &trans &trans     &kp N0  &kp N4  &kp N5  &kp N6  &kp N0 
&trans &trans &trans &trans &trans     &trans  &kp N1  &kp N2  &kp N3  &trans 
                        &trans &trans     &trans   &trans
>;
};


config_layer {
// ----------------------------------------------------
// | | | | | |     | BT1    | BT2   | BT3 | BT4 | BT5 |
// | | | | | |     | BT CLR |       |     |     |     |
// | | | | | |     | Reset  | btldr |     |     |     |
//       | | |     |        |       |
bindings = <
&trans &trans &trans &trans &trans       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3   &bt BT_SEL 4
&trans &trans &trans &trans &trans       &bt BT_CLR   &none        &none        &none        &none 
&trans &trans &trans &trans &trans       &sys_reset   &bootloader  &out OUT_TOG &none        &none
                     &trans &trans       &trans       &trans
                        >;
        };
    };

    // keymap {
    //     compatible = "zmk,keymap";

    //     MAIN_layer {
    //         bindings = <
    //                         &kp W      &kp E       &kp R        &kp T            &kp Y     &kp U      &kp I           &kp O
    //       &kp Q &kp A       &kp S      &kp D       &lt SYM F    &kp G            &kp H     &lt SYM J  &kp K           &kp L        &kp SQT        &kp P
    //             &mt LSHFT Z &mt LALT X &mt LCTRL C &mt LGUI V   &kp B            &kp N     &mt RGUI M &mt RCTRL COMMA &mt RALT DOT &mt RSHFT FSLH
    //                                                &lt BT ENTER &lt NAV SPACE    &sk RSHFT &kp BSPC
    //         >;
    //     };

    //     SYM_layer {
    //         bindings = <
    //                       &kp N7 &kp N8 &kp N9  &kp STAR     &kp DLLR  &kp LBRC &kp RBRC &kp HASH
    //    &kp AMPS &kp EXCL  &kp N1 &kp N2 &kp N3  &kp EQUAL    &kp LT    &kp LPAR &kp RPAR &kp GT   &kp PIPE  &none
    //             &kp CARET &kp N4 &kp N5 &kp N6  &kp PLUS     &kp TILDE &kp LBKT &kp RBKT &kp AT   &kp PRCNT
    //                                     &kp DOT &kp N0       &trans    &none
    //         >;
    //     };

    //     NAV_layer {
    //         bindings = <
    //                        &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &kp C_PP           &none     &kp F7  &kp F8 &kp F9
    //  &kp C_PREV &kp LEFT   &kp DOWN     &kp UP       &kp RIGHT  &kp LC(TAB)        &kp PSCRN &kp F1  &kp F2 &kp F3 &kp F10 &kp F12
    //             &kp HOME   &kp PG_DN    &kp PG_UP    &kp END    &kp LS(LC(TAB))    &kp CAPS  &kp F4  &kp F5 &kp F6 &kp F11
    //                                                  &none      &none              &trans    &kp DEL
    //         >;
    //     };

    //     BT_layer {
    //         bindings = <
    //                   &none &none &none &none    &none &none        &none        &none
    //       &none &none &none &none &none &none    &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none
    //             &none &none &none &none &none    &none &bt BT_CLR   &none        &none        &none
    //                               &none &none    &none &none
    //         >;
    //     };
    // };

    
};